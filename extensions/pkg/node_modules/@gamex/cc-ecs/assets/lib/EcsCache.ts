import { IComponent, IEntity } from './EcsObject';

class Cache<V> {
    private cache: V[] = [];
    get() {
        if (this.cache.length) {
            return this.cache.pop();
        }
        return null;
    }
    put(v: V) {
        this.cache.push(v);
    }
    clear() {
        this.cache.length = 0;
    }
}
/**实体缓存 */
export const entityCache = new Cache<IEntity>;

class CacheMap<V> {
    private cache: Map<string, V[]> = new Map();
    get(k: string) {
        const array = this.cache.get(k);
        if (array && array.length) {
            return array.pop();
        }
        return null;
    }
    put(k: string, v: V) {
        const array = this.cache.get(k);
        if (array) {
            array.push(v);
        } else {
            this.cache.set(k, [v]);
        }
    }
    clear() {
        this.cache.clear();
    }
}
/**组件缓存 */
export const componentCache = new CacheMap<IComponent>();